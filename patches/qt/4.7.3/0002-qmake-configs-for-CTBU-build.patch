From 3ef23fec669d440dd3f5d12a202c7be802781c89 Mon Sep 17 00:00:00 2001
From: Michael Edwards <michaedw@cisco.com>
Date: Mon, 7 Feb 2011 16:27:24 -0800
Subject: [PATCH] qmake configs for CTBU build

---
 config.tests/qws/directfb/directfb.pro       |    6 ++-
 config.tests/unix/freetype/freetype.pri      |   11 +++--
 config.tests/unix/opengles2/opengles2.pro    |   11 +++++-
 config.tests/unix/openvg/openvg.pro          |   13 ++++++
 configure                                    |   46 +++++++++++++++++++++--
 mkspecs/features/unix/opengl.prf             |    5 ++
 mkspecs/features/unix/openvg.prf             |    6 +++
 mkspecs/qws/linux-cm-g++/qmake.conf          |   52 ++++++++++++++++++++++++++
 mkspecs/qws/linux-cm-g++/qplatformdefs.h     |   42 +++++++++++++++++++++
 src/corelib/global/global.pri                |    6 ++-
 src/gui/embedded/directfb.pri                |    6 ++-
 src/opengl/opengl.pro                        |    6 +++
 src/openvg/openvg.pro                        |    6 +++
 src/plugins/gfxdrivers/directfb/directfb.pro |    7 ++-
 14 files changed, 207 insertions(+), 16 deletions(-)
 create mode 100644 mkspecs/qws/linux-cm-g++/qmake.conf
 create mode 100644 mkspecs/qws/linux-cm-g++/qplatformdefs.h

diff --git a/config.tests/qws/directfb/directfb.pro b/config.tests/qws/directfb/directfb.pro
index db14d3b..819cd10 100644
--- a/config.tests/qws/directfb/directfb.pro
+++ b/config.tests/qws/directfb/directfb.pro
@@ -1,5 +1,7 @@
 SOURCES = directfb.cpp
 CONFIG -= qt
 
-QMAKE_CXXFLAGS += $$QT_CFLAGS_DIRECTFB
-LIBS += $$QT_LIBS_DIRECTFB
+!isEmpty(QMAKE_INCDIR_DIRECTFB): INCLUDEPATH += $$QMAKE_INCDIR_DIRECTFB
+!isEmpty(QMAKE_LIBDIR_DIRECTFB): LIBS += -L$$QMAKE_LIBDIR_DIRECTFB
+!isEmpty(QMAKE_LIBS_DIRECTFB): LIBS += $$QMAKE_LIBS_DIRECTFB
+!isEmpty(QMAKE_CFLAGS_DIRECTFB): QMAKE_CXXFLAGS += $$QMAKE_CFLAGS_DIRECTFB
diff --git a/config.tests/unix/freetype/freetype.pri b/config.tests/unix/freetype/freetype.pri
index 7ef1cf9..23b1dd9 100644
--- a/config.tests/unix/freetype/freetype.pri
+++ b/config.tests/unix/freetype/freetype.pri
@@ -1,9 +1,12 @@
+TRY_INCLUDEPATHS = $$QMAKE_INCDIR $$QMAKE_INCDIR_X11 $$INCLUDEPATH
+
 !cross_compile {
     TRY_INCLUDEPATHS = /include /usr/include $$QMAKE_INCDIR $$QMAKE_INCDIR_X11 $$INCLUDEPATH
     # LSB doesn't allow using headers from /include or /usr/include
     linux-lsb-g++:TRY_INCLUDEPATHS = $$QMAKE_INCDIR $$QMAKE_INCDIR_X11 $$INCLUDEPATH
-    for(p, TRY_INCLUDEPATHS) {
-        p = $$join(p, "", "", "/freetype2")
-        exists($$p):INCLUDEPATH *= $$p
-    }
+}
+
+for(p, TRY_INCLUDEPATHS) {
+    p = $$join(p, "", "", "/freetype2")
+    exists($$p):INCLUDEPATH *= $$p
 }
diff --git a/config.tests/unix/opengles2/opengles2.pro b/config.tests/unix/opengles2/opengles2.pro
index c383fd0..64c2787 100644
--- a/config.tests/unix/opengles2/opengles2.pro
+++ b/config.tests/unix/opengles2/opengles2.pro
@@ -5,5 +5,14 @@ for(p, QMAKE_LIBDIR_OPENGL_ES2) {
     exists($$p):LIBS += -L$$p
 }
 
-CONFIG -= qt
 LIBS += $$QMAKE_LIBS_OPENGL_ES2
+
+# Some OpenGL ES v2 engines (e.g. IntelCE) share library dependencies with EGL.
+# Add the extra includes and libraries for that case.
+opengles2_on_egl {
+    !isEmpty(QMAKE_INCDIR_EGL): INCLUDEPATH += $$QMAKE_INCDIR_EGL
+    !isEmpty(QMAKE_LIBDIR_EGL): LIBS += -L$$QMAKE_LIBDIR_EGL
+    !isEmpty(QMAKE_LIBS_EGL): LIBS += $$QMAKE_LIBS_EGL
+}
+
+CONFIG -= qt
diff --git a/config.tests/unix/openvg/openvg.pro b/config.tests/unix/openvg/openvg.pro
index 4bbde99..27c8379 100644
--- a/config.tests/unix/openvg/openvg.pro
+++ b/config.tests/unix/openvg/openvg.pro
@@ -12,6 +12,19 @@ openvg_on_opengl {
     !isEmpty(QMAKE_LIBS_OPENGL): LIBS += $$QMAKE_LIBS_OPENGL
 }
 
+# Some OpenVG engines (e.g. IntelCE) are implemented on top of OpenGL ES v2.
+# Add the extra includes and libraries for that case.
+openvg_on_opengles2 {
+    !isEmpty(QMAKE_INCDIR_OPENGL_ES2): INCLUDEPATH += $$QMAKE_INCDIR_OPENGL_ES2
+    !isEmpty(QMAKE_LIBDIR_OPENGL_ES2): LIBS += -L$$QMAKE_LIBDIR_OPENGL_ES2
+    !isEmpty(QMAKE_LIBS_OPENGL_ES2): LIBS += $$QMAKE_LIBS_OPENGL_ES2
+    opengles2_on_egl {
+        !isEmpty(QMAKE_INCDIR_EGL): INCLUDEPATH += $$QMAKE_INCDIR_EGL
+        !isEmpty(QMAKE_LIBDIR_EGL): LIBS += -L$$QMAKE_LIBDIR_EGL
+        !isEmpty(QMAKE_LIBS_EGL): LIBS += $$QMAKE_LIBS_EGL
+    }
+}
+
 lower_case_includes {
     DEFINES += QT_LOWER_CASE_VG_INCLUDES
 }
diff --git a/configure b/configure
index 0d9df16..3ff739f 100755
--- a/configure
+++ b/configure
@@ -664,10 +664,13 @@ CFG_XRANDR=runtime
 CFG_XRENDER=auto
 CFG_MITSHM=auto
 CFG_OPENGL=auto
+CFG_OPENGLES2_ON_EGL=no
+CFG_OPENGLES2_QMAKE_CONFIG=
 CFG_OPENVG=no
 CFG_OPENVG_LC_INCLUDES=no
 CFG_OPENVG_SHIVA=no
 CFG_OPENVG_ON_OPENGL=no
+CFG_OPENVG_ON_OPENGLES2=no
 CFG_EGL=no
 CFG_EGL_GLES_INCLUDES=no
 CFG_SSE=auto
@@ -5571,6 +5574,11 @@ if [ "$PLATFORM_X11" = "yes" -o "$XPLATFORM_MINGW" = "yes" ]; then
             if [ "$CFG_EGL" = "no" ]; then
                 CFG_EGL=auto
             fi
+        elif "$unixtests/compile.test" "$XQMAKESPEC" "$QMAKE_CONFIG opengles2_on_egl" $OPT_VERBOSE "$relpath" "$outpath" config.tests/unix/opengles2 "OpenGL ES 2.x" $L_FLAGS $I_FLAGS $l_FLAGS; then
+            CFG_OPENGL=es2
+            CFG_EGL=yes
+            CFG_OPENGLES2_ON_EGL=yes
+            CFG_OPENGLES2_QMAKE_CONFIG=opengles2_on_egl
         elif "$unixtests/compile.test" "$XQMAKESPEC" "$QMAKE_CONFIG" $OPT_VERBOSE "$relpath" "$outpath" config.tests/unix/opengles1 "OpenGL ES 1.x" $L_FLAGS $I_FLAGS $l_FLAGS; then
             CFG_OPENGL=es1
             if [ "$CFG_EGL" = "no" ]; then
@@ -5611,8 +5619,12 @@ if [ "$PLATFORM_X11" = "yes" -o "$XPLATFORM_MINGW" = "yes" ]; then
         fi
     elif [ "$CFG_OPENGL" = "es2" ]; then
         #OpenGL ES 2.x
-        "$unixtests/compile.test" "$XQMAKESPEC" "$QMAKE_CONFIG" $OPT_VERBOSE "$relpath" "$outpath" config.tests/unix/opengles2 "OpenGL ES 2.x" $L_FLAGS $I_FLAGS $l_FLAGS
-        if [ $? != "0" ]; then
+        if "$unixtests/compile.test" "$XQMAKESPEC" "$QMAKE_CONFIG" $OPT_VERBOSE "$relpath" "$outpath" config.tests/unix/opengles2 "OpenGL ES 2.x" $L_FLAGS $I_FLAGS $l_FLAGS; then
+            :
+        elif "$unixtests/compile.test" "$XQMAKESPEC" "$QMAKE_CONFIG opengles2_on_egl" $OPT_VERBOSE "$relpath" "$outpath" config.tests/unix/opengles2 "OpenGL ES 2.x" $L_FLAGS $I_FLAGS $l_FLAGS; then
+            CFG_OPENGLES2_ON_EGL=yes
+            CFG_OPENGLES2_QMAKE_CONFIG=opengles2_on_egl
+        else
             echo "The OpenGL ES 2.0 functionality test failed!"
             echo " You might need to modify the include and library search paths by editing"
             echo " QMAKE_INCDIR_OPENGL_ES2, QMAKE_LIBDIR_OPENGL_ES2 and QMAKE_LIBS_OPENGL_ES2 in"
@@ -5951,6 +5963,11 @@ if [ "$PLATFORM_QWS" = "yes" ]; then
         CFG_EGL=auto
         if "$unixtests/compile.test" "$XQMAKESPEC" "$QMAKE_CONFIG" $OPT_VERBOSE "$relpath" "$outpath" config.tests/unix/opengles2 "OpenGL ES 2.x" $L_FLAGS $I_FLAGS $l_FLAGS; then
             CFG_OPENGL=es2
+        elif "$unixtests/compile.test" "$XQMAKESPEC" "$QMAKE_CONFIG opengles2_on_egl" $OPT_VERBOSE "$relpath" "$outpath" config.tests/unix/opengles2 "OpenGL ES 2.x" $L_FLAGS $I_FLAGS $l_FLAGS; then
+            CFG_OPENGL=es2
+            CFG_EGL=yes
+            CFG_OPENGLES2_ON_EGL=yes
+            CFG_OPENGLES2_QMAKE_CONFIG=opengles2_on_egl
         elif "$unixtests/compile.test" "$XQMAKESPEC" "$QMAKE_CONFIG" $OPT_VERBOSE "$relpath" "$outpath" config.tests/unix/opengles1 "OpenGL ES 1.x" $L_FLAGS $I_FLAGS $l_FLAGS; then
             CFG_OPENGL=es1
         else
@@ -5973,8 +5990,12 @@ if [ "$PLATFORM_QWS" = "yes" ]; then
         CFG_EGL=yes
     elif [ "$CFG_OPENGL" = "es2" ]; then
         #OpenGL ES 2.x
-        "$unixtests/compile.test" "$XQMAKESPEC" "$QMAKE_CONFIG" $OPT_VERBOSE "$relpath" "$outpath" config.tests/unix/opengles2 "OpenGL ES 2.x" $L_FLAGS $I_FLAGS $l_FLAGS
-        if [ $? != "0" ]; then
+        if "$unixtests/compile.test" "$XQMAKESPEC" "$QMAKE_CONFIG" $OPT_VERBOSE "$relpath" "$outpath" config.tests/unix/opengles2 "OpenGL ES 2.x" $L_FLAGS $I_FLAGS $l_FLAGS; then
+            :
+        elif "$unixtests/compile.test" "$XQMAKESPEC" "$QMAKE_CONFIG opengles2_on_egl" $OPT_VERBOSE "$relpath" "$outpath" config.tests/unix/opengles2 "OpenGL ES 2.x" $L_FLAGS $I_FLAGS $l_FLAGS; then
+            CFG_OPENGLES2_ON_EGL=yes
+            CFG_OPENGLES2_QMAKE_CONFIG=opengles2_on_egl
+        else
             echo "The OpenGL ES 2.0 functionality test failed!"
             echo " You might need to modify the include and library search paths by editing"
             echo " QMAKE_INCDIR_OPENGL, QMAKE_LIBDIR_OPENGL and QMAKE_LIBS_OPENGL in"
@@ -6378,6 +6399,11 @@ if [ "$CFG_OPENVG" != "no" ] && [ "$XPLATFORM" != "symbian-sbsv2" ]; then
             CFG_OPENVG=yes
         fi
         CFG_OPENVG_ON_OPENGL=yes
+    elif "$unixtests/compile.test" "$XQMAKESPEC" "$QMAKE_CONFIG openvg_on_opengles2 $CFG_OPENGLES2_QMAKE_CONFIG" $OPT_VERBOSE "$relpath" "$outpath" "config.tests/unix/openvg" "OpenVG" $L_FLAGS $I_FLAGS $l_FLAGS $CONFIG_ARG; then
+        if [ "$CFG_OPENVG" = "auto" ]; then
+            CFG_OPENVG=yes
+        fi
+        CFG_OPENVG_ON_OPENGLES2=yes
     elif "$unixtests/compile.test" "$XQMAKESPEC" "$QMAKE_CONFIG lower_case_includes" $OPT_VERBOSE "$relpath" "$outpath" "config.tests/unix/openvg" "OpenVG (lc includes)" $L_FLAGS $I_FLAGS $l_FLAGS $CONFIG_ARG; then
         if [ "$CFG_OPENVG" = "auto" ]; then
             CFG_OPENVG=yes
@@ -6389,6 +6415,12 @@ if [ "$CFG_OPENVG" != "no" ] && [ "$XPLATFORM" != "symbian-sbsv2" ]; then
         fi
         CFG_OPENVG_LC_INCLUDES=yes
         CFG_OPENVG_ON_OPENGL=yes
+    elif "$unixtests/compile.test" "$XQMAKESPEC" "$QMAKE_CONFIG openvg_on_opengles2 $CFG_OPENGLES2_QMAKE_CONFIG lower_case_includes" $OPT_VERBOSE "$relpath" "$outpath" "config.tests/unix/openvg" "OpenVG (lc includes)" $L_FLAGS $I_FLAGS $l_FLAGS $CONFIG_ARG; then
+        if [ "$CFG_OPENVG" = "auto" ]; then
+            CFG_OPENVG=yes
+        fi
+        CFG_OPENVG_LC_INCLUDES=yes
+        CFG_OPENVG_ON_OPENGLES2=yes
     else
         if [ "$CFG_OPENVG" != "auto" ] && [ "$CFG_CONFIGURE_EXIT_ON_ERROR" = "yes" ]; then
             echo "$CFG_OPENVG was specified for OpenVG but cannot be enabled due to functionality tests!"
@@ -6637,6 +6669,9 @@ else
     if [ "$CFG_OPENVG_ON_OPENGL" = "yes" ]; then
         QT_CONFIG="$QT_CONFIG openvg_on_opengl"
     fi
+    if [ "$CFG_OPENVG_ON_OPENGLES2" = "yes" ]; then
+        QT_CONFIG="$QT_CONFIG openvg_on_opengles2"
+    fi
     if [ "$CFG_OPENVG_SHIVA" = "yes" ]; then
         QT_CONFIG="$QT_CONFIG shivavg"
         QCONFIG_FLAGS="$QCONFIG_FLAGS QT_SHIVAVG"
@@ -6679,6 +6714,9 @@ fi
 if [ "$CFG_OPENGL" = "es2" ]; then
     QCONFIG_FLAGS="$QCONFIG_FLAGS QT_OPENGL_ES_2"
     QT_CONFIG="$QT_CONFIG opengles2"
+    if [ "$CFG_OPENGLES2_ON_EGL" = "yes" ]; then
+        QT_CONFIG="$QT_CONFIG opengles2_on_egl"
+    fi
 fi
 
 # safe execution environment
diff --git a/mkspecs/features/unix/opengl.prf b/mkspecs/features/unix/opengl.prf
index 74a5149..49a936e 100644
--- a/mkspecs/features/unix/opengl.prf
+++ b/mkspecs/features/unix/opengl.prf
@@ -8,6 +8,11 @@ contains(QT_CONFIG, opengles1) {
     !isEmpty(QMAKE_LIBDIR_OPENGL_ES2):QMAKE_LIBDIR += $$QMAKE_LIBDIR_OPENGL_ES2
     target_qt:LIBS_PRIVATE += $$QMAKE_LIBS_OPENGL_ES2
     else:LIBS += $$QMAKE_LIBS_OPENGL_ES2
+    contains(QT_CONFIG, opengles2_on_egl) {
+        !isEmpty(QMAKE_INCDIR_EGL): INCLUDEPATH += $$QMAKE_INCDIR_EGL
+        !isEmpty(QMAKE_LIBDIR_EGL): QMAKE_LIBDIR += -L$$QMAKE_LIBDIR_EGL
+        !isEmpty(QMAKE_LIBS_EGL): LIBS += $$QMAKE_LIBS_EGL
+    }
 } else {
     INCLUDEPATH += $$QMAKE_INCDIR_OPENGL
     !isEmpty(QMAKE_LIBDIR_OPENGL):QMAKE_LIBDIR += $$QMAKE_LIBDIR_OPENGL
diff --git a/mkspecs/features/unix/openvg.prf b/mkspecs/features/unix/openvg.prf
index 29acec1..c8c2baa 100644
--- a/mkspecs/features/unix/openvg.prf
+++ b/mkspecs/features/unix/openvg.prf
@@ -13,3 +13,9 @@ contains(QT_CONFIG, openvg_on_opengl) {
     !isEmpty(QMAKE_LIBDIR_OPENGL): QMAKE_LIBDIR += -L$$QMAKE_LIBDIR_OPENGL
     !isEmpty(QMAKE_LIBS_OPENGL): LIBS += $$QMAKE_LIBS_OPENGL
 }
+
+contains(QT_CONFIG, openvg_on_opengles2) {
+    !isEmpty(QMAKE_INCDIR_OPENGL_ES2): INCLUDEPATH += $$QMAKE_INCDIR_OPENGL_ES2
+    !isEmpty(QMAKE_LIBDIR_OPENGL_ES2): QMAKE_LIBDIR += -L$$QMAKE_LIBDIR_OPENGL_ES2
+    !isEmpty(QMAKE_LIBS_OPENGL_ES2): LIBS += $$QMAKE_LIBS_OPENGL_ES2
+}
diff --git a/mkspecs/qws/linux-cm-g++/qmake.conf b/mkspecs/qws/linux-cm-g++/qmake.conf
new file mode 100644
index 0000000..ecde2cc
--- /dev/null
+++ b/mkspecs/qws/linux-cm-g++/qmake.conf
@@ -0,0 +1,53 @@
+#
+# qmake configuration for building with linux-g++
+#
+
+include(../../common/g++.conf)
+include(../../common/linux.conf)
+include(../../common/qws.conf)
+
+QMAKE_CCFLAGS		= -g -Os
+QMAKE_CXXFLAGS		= -g -Os
+QMAKE_LFLAGS		= -Wl,-rpath-link,$(BUILD_ROOT)/qt-embedded/lib
+
+QMAKE_CC		= $(HOST_TUPLE)-gcc
+QMAKE_CXX		= $(HOST_TUPLE)-g++
+QMAKE_LINK		= $(HOST_TUPLE)-g++
+QMAKE_LINK_SHLIB	= $(HOST_TUPLE)-g++
+QMAKE_LINK_C		= $(HOST_TUPLE)-gcc
+QMAKE_LINK_C_SHLIB	= $(HOST_TUPLE)-gcc
+
+
+QMAKE_INCDIR          = $(CTBU_SYSROOT)/usr/include
+QMAKE_LIBDIR          = $(CTBU_SYSROOT)/usr/lib
+QMAKE_INCDIR_X11      = 
+QMAKE_LIBDIR_X11      = 
+QMAKE_INCDIR_QT       = $$[QT_INSTALL_HEADERS]
+QMAKE_LIBDIR_QT       = $$[QT_INSTALL_LIBS]
+QMAKE_INCDIR_OPENGL   = 
+QMAKE_LIBDIR_OPENGL   = 
+QMAKE_INCDIR_OPENGL_ES1 = 
+QMAKE_LIBDIR_OPENGL_ES1 = 
+QMAKE_INCDIR_OPENGL_ES1CL = 
+QMAKE_LIBDIR_OPENGL_ES1CL = 
+QMAKE_INCDIR_OPENGL_ES2 = 
+QMAKE_LIBDIR_OPENGL_ES2 = 
+QMAKE_INCDIR_EGL      = 
+QMAKE_LIBDIR_EGL      =
+QMAKE_INCDIR_OPENVG   = 
+QMAKE_LIBDIR_OPENVG   =
+QMAKE_INCDIR_DIRECTFB = $(CTBU_SYSROOT)/usr/include/directfb
+QMAKE_LIBDIR_DIRECTFB = 
+
+QMAKE_LIBS_EGL        = -lEGL
+QMAKE_LIBS_OPENGL_ES2 = -lGLESv2
+QMAKE_LIBS_OPENVG     = -lOpenVGU -lOpenVG
+QMAKE_LIBS_DIRECTFB   = -ldirectfb -lfusion -ldirect -lz
+
+QMAKE_AR              = $(HOST_TUPLE)-ar cqs
+QMAKE_OBJCOPY         = $(HOST_TUPLE)-objcopy
+QMAKE_STRIP           = $(HOST_TUPLE)-strip
+
+DEFINES += QT_QWS_CLIENTBLIT QT_NO_QWS_CURSOR
+
+load(qt_config)
diff --git a/mkspecs/qws/linux-cm-g++/qplatformdefs.h b/mkspecs/qws/linux-cm-g++/qplatformdefs.h
new file mode 100644
index 0000000..b0551e5
--- /dev/null
+++ b/mkspecs/qws/linux-cm-g++/qplatformdefs.h
@@ -0,0 +1,42 @@
+/****************************************************************************
+**
+** Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).
+** All rights reserved.
+** Contact: Nokia Corporation (qt-info@nokia.com)
+**
+** This file is part of the qmake spec of the Qt Toolkit.
+**
+** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
+** GNU Lesser General Public License Usage
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+**
+** In addition, as a special exception, Nokia gives you certain additional
+** rights.  These rights are described in the Nokia Qt LGPL Exception
+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
+**
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
+**
+**
+**
+**
+**
+**
+**
+**
+** $QT_END_LICENSE$
+**
+****************************************************************************/
+
+#include "../../linux-g++/qplatformdefs.h"
diff --git a/src/corelib/global/global.pri b/src/corelib/global/global.pri
index 4800716..922d99c 100644
--- a/src/corelib/global/global.pri
+++ b/src/corelib/global/global.pri
@@ -22,7 +22,11 @@ PRECOMPILED_HEADER = global/qt_pch.h
 linux*:!static:!linux-armcc:!linux-gcce {
    QMAKE_LFLAGS += -Wl,-e,qt_core_boilerplate
    prog=$$quote(if (/program interpreter: (.*)]/) { print $1; })
-   DEFINES += ELF_INTERPRETER=\\\"$$system(readelf -l /bin/ls | perl -n -e \'$$prog\')\\\"
+   !cross_compile {
+      DEFINES += ELF_INTERPRETER=\\\"$$system(readelf -l /bin/ls | perl -n -e \'$$prog\')\\\"
+   } else {
+      DEFINES += ELF_INTERPRETER=\\\"/lib/ld-linux.so.2\\\"
+   }
 }
 
 # Compensate for lack of platform defines in Symbian3 and Symbian4
diff --git a/src/gui/embedded/directfb.pri b/src/gui/embedded/directfb.pri
index 75d693e..0edb741 100644
--- a/src/gui/embedded/directfb.pri
+++ b/src/gui/embedded/directfb.pri
@@ -36,5 +36,7 @@ SOURCES += $$QT_SOURCE_TREE/src/plugins/gfxdrivers/directfb/qdirectfbscreen.cpp
            $$QT_SOURCE_TREE/src/plugins/gfxdrivers/directfb/qdirectfbmouse.cpp
 
 
-QMAKE_CXXFLAGS += $$QT_CFLAGS_DIRECTFB
-LIBS += $$QT_LIBS_DIRECTFB
+!isEmpty(QMAKE_INCDIR_DIRECTFB): INCLUDEPATH += $$QMAKE_INCDIR_DIRECTFB
+!isEmpty(QMAKE_LIBDIR_DIRECTFB): LIBS += -L$$QMAKE_LIBDIR_DIRECTFB
+!isEmpty(QMAKE_LIBS_DIRECTFB): LIBS += $$QMAKE_LIBS_DIRECTFB
+!isEmpty(QMAKE_CFLAGS_DIRECTFB): QMAKE_CXXFLAGS += $$QMAKE_CFLAGS_DIRECTFB
diff --git a/src/opengl/opengl.pro b/src/opengl/opengl.pro
index 0e82467..c024ebe 100644
--- a/src/opengl/opengl.pro
+++ b/src/opengl/opengl.pro
@@ -43,6 +43,12 @@ SOURCES	+= qgl.cpp \
     SOURCES += qpaintengine_opengl.cpp
 }
 
+contains(QT_CONFIG, opengles2_on_egl) {
+    !isEmpty(QMAKE_INCDIR_EGL): INCLUDEPATH += $$QMAKE_INCDIR_EGL
+    !isEmpty(QMAKE_LIBDIR_EGL): LIBS_PRIVATE += -L$$QMAKE_LIBDIR_EGL
+    !isEmpty(QMAKE_LIBS_EGL): LIBS_PRIVATE += $$QMAKE_LIBS_EGL
+}
+
 !contains(QT_CONFIG, opengles1) {
     HEADERS +=  qglshaderprogram.h \
                 qglpixmapfilter_p.h  \
diff --git a/src/openvg/openvg.pro b/src/openvg/openvg.pro
index eb60331..80d738a 100644
--- a/src/openvg/openvg.pro
+++ b/src/openvg/openvg.pro
@@ -61,4 +61,10 @@ contains(QT_CONFIG, openvg_on_opengl) {
     !isEmpty(QMAKE_LIBS_OPENGL): LIBS_PRIVATE += $$QMAKE_LIBS_OPENGL
 }
 
+contains(QT_CONFIG, openvg_on_opengles2) {
+    !isEmpty(QMAKE_INCDIR_OPENGL_ES2): INCLUDEPATH += $$QMAKE_INCDIR_OPENGL_ES2
+    !isEmpty(QMAKE_LIBDIR_OPENGL_ES2): LIBS_PRIVATE += -L$$QMAKE_LIBDIR_OPENGL_ES2
+    !isEmpty(QMAKE_LIBS_OPENGL_ES2): LIBS_PRIVATE += $$QMAKE_LIBS_OPENGL_ES2
+}
+
 INCLUDEPATH += ../3rdparty/harfbuzz/src
diff --git a/src/plugins/gfxdrivers/directfb/directfb.pro b/src/plugins/gfxdrivers/directfb/directfb.pro
index d397050..763dd5d 100644
--- a/src/plugins/gfxdrivers/directfb/directfb.pro
+++ b/src/plugins/gfxdrivers/directfb/directfb.pro
@@ -9,7 +9,10 @@ INSTALLS += target
 
 SOURCES += qdirectfbscreenplugin.cpp
 
-QMAKE_CXXFLAGS += $$QT_CFLAGS_DIRECTFB
-LIBS += $$QT_LIBS_DIRECTFB
+!isEmpty(QMAKE_INCDIR_DIRECTFB): INCLUDEPATH += $$QMAKE_INCDIR_DIRECTFB
+!isEmpty(QMAKE_LIBDIR_DIRECTFB): LIBS += -L$$QMAKE_LIBDIR_DIRECTFB
+!isEmpty(QMAKE_LIBS_DIRECTFB): LIBS += $$QMAKE_LIBS_DIRECTFB
+!isEmpty(QMAKE_CFLAGS_DIRECTFB): QMAKE_CXXFLAGS += $$QMAKE_CFLAGS_DIRECTFB
+
 DEFINES += $$QT_DEFINES_DIRECTFB
 contains(gfx-plugins, directfb):DEFINES += QT_QWS_DIRECTFB
-- 
1.7.1.rc2


From 561064aa32ff48c6947b7622bc03e2230eed001d Mon Sep 17 00:00:00 2001
From: michaedw in build chroot <build@ctbu-bld5.cisco.com>
Date: Thu, 19 May 2011 05:38:23 +0000
Subject: [PATCH 8/9] Replace gethostbyname with getaddrinfo (IPv4 only)

---
 Makefile             |    1 +
 src/XmlRpcSocket.cpp |   38 +++++++++++++++++++++-----------------
 2 files changed, 22 insertions(+), 17 deletions(-)

diff --git a/Makefile b/Makefile
index 15c68d5..364a338 100644
--- a/Makefile
+++ b/Makefile
@@ -38,6 +38,7 @@ $(LIB):		$(OBJ)
 
 $(SO):		$(OBJ)
 		$(CXX) -o $(SO) $(SHARED) $(OBJ)
+		rm -f libXmlRpc.so
 		$(LN) $(SO) libXmlRpc.so
 
 
diff --git a/src/XmlRpcSocket.cpp b/src/XmlRpcSocket.cpp
index d4642e5..aa3c7d0 100644
--- a/src/XmlRpcSocket.cpp
+++ b/src/XmlRpcSocket.cpp
@@ -5,6 +5,7 @@
 #include "XmlRpcSocket.h"
 #include "XmlRpcUtil.h"
 
+#include <sstream>
 
 #if defined(_WINDOWS)
 # include <stdio.h>
@@ -157,25 +158,28 @@ XmlRpcSocket::accept(XmlRpcSocket::Socket fd)
 bool
 XmlRpcSocket::connect(XmlRpcSocket::Socket fd, std::string& host, int port)
 {
-  struct sockaddr_in saddr;
-  memset(&saddr, 0, sizeof(saddr));
-  saddr.sin_family = AF_INET;
-
-  struct hostent *hp = gethostbyname(host.c_str());
-  if (hp == 0) return false;
-  if (hp->h_addr == 0) {
-      XmlRpcUtil::error("XmlRpcSocket::connect error: hp->h_addr is null");
-      return false;
+  std::ostringstream ss;
+  ss << port;
+  std::string port_s = ss.str();
+
+  addrinfo hints = { AI_ADDRCONFIG | AI_NUMERICSERV, AF_INET, SOCK_STREAM, 0, 0, 0, 0, 0 };
+  addrinfo* res;
+  int err = getaddrinfo(host.c_str(), port_s.c_str(), &hints, &res);
+  if (err != 0)
+    return false;
+
+  bool ret = false;
+  for (struct addrinfo *r = res; r != NULL; r = r->ai_next) {
+    int result = ::connect(fd, r->ai_addr, r->ai_addrlen);
+    if (result == 0 || nonFatalError())
+    {
+      ret = true;
+      break;
+    }
   }
+  freeaddrinfo(res);
 
-  saddr.sin_family = hp->h_addrtype;
-  memcpy(&saddr.sin_addr, hp->h_addr, hp->h_length);
-  saddr.sin_port = htons((u_short) port);
-
-  // For asynch operation, this will return EWOULDBLOCK (windows) or
-  // EINPROGRESS (linux) and we just need to wait for the socket to be writable...
-  int result = ::connect(fd, (struct sockaddr *)&saddr, sizeof(saddr));
-  return result == 0 || nonFatalError();
+  return ret;
 }
 
 
-- 
1.7.0.4

